"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748],{6641:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=t(4848),s=t(8453);const o={},l="useAnalyzeTone",a={id:"hooks/use-analyze-tone",title:"useAnalyzeTone",description:"The useAnalyzeTone hook is responsible for analyzing the tone of a given text by sending a request to an external API. It returns an asynchronous function analyzeTone that performs the analysis and returns the result.",source:"@site/docs/hooks/use-analyze-tone.md",sourceDirName:"hooks",slug:"/hooks/use-analyze-tone",permalink:"/text_mood_processor_frontend/hooks/use-analyze-tone",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ToneSelector",permalink:"/text_mood_processor_frontend/components/tone-selector"},next:{title:"useChangeTone",permalink:"/text_mood_processor_frontend/hooks/use-change-tone"}},i={},c=[{value:"Functionality",id:"functionality",level:2},{value:"API Call",id:"api-call",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Usage Example",id:"usage-example",level:3},{value:"AnalyzeResult Interface",id:"analyzeresult-interface",level:3},{value:"Environment Variable",id:"environment-variable",level:3},{value:"Error Handling",id:"error-handling-1",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"useanalyzetone",children:"useAnalyzeTone"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"useAnalyzeTone"})," hook is responsible for analyzing the tone of a given text by sending a request to an external API. It returns an asynchronous function ",(0,r.jsx)(n.code,{children:"analyzeTone"})," that performs the analysis and returns the result."]}),"\n",(0,r.jsx)(n.h2,{id:"functionality",children:"Functionality"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"analyzeTone: (text: string) => Promise<AnalyzeResult | null>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Input"}),": A string ",(0,r.jsx)(n.code,{children:"text"})," that represents the text to be analyzed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Output"}),": A ",(0,r.jsx)(n.code,{children:"Promise"})," that resolves to an ",(0,r.jsx)(n.code,{children:"AnalyzeResult"})," object if the request is successful, or ",(0,r.jsx)(n.code,{children:"null"})," if an error occurs."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"api-call",children:"API Call"}),"\n",(0,r.jsxs)(n.p,{children:["The hook sends a POST request to the tone analysis API using the URL defined in the environment variable ",(0,r.jsx)(n.code,{children:"VITE_ANALYZE_TONE_URL"}),". The request includes the text to be analyzed in the request body."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Content-Type"}),": ",(0,r.jsx)(n.code,{children:"application/json"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Body"}),": The text to analyze in JSON format."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const response = await fetch(`${apiUrl}`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ text }),\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"If the request fails or the server responds with an error status code, an error is thrown and caught in the try-catch block. In case of failure, the function logs the error to the console and returns null."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"if (!response.ok) {\n  throw new Error('Error analyzing tone');\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport useAnalyzeTone from './useAnalyzeTone';\n\nconst TextAnalyzer = () => {\n  const { analyzeTone } = useAnalyzeTone();\n  const [result, setResult] = useState(null);\n\n  const handleAnalyze = async () => {\n    const text = 'This is a test text.';\n    const analysisResult = await analyzeTone(text);\n    setResult(analysisResult);\n  };\n\n  return (\n    <div>\n      <button onClick={handleAnalyze}>Analyze Tone</button>\n      {result && (\n        <div>\n          <h3>Analysis Result</h3>\n          <pre>{JSON.stringify(result, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextAnalyzer;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"analyzeresult-interface",children:"AnalyzeResult Interface"}),"\n",(0,r.jsx)(n.p,{children:"The AnalyzeResult type defines the shape of the response returned by the API. This type is imported from a types file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export interface AnalyzeResult {\n  emotions: {\n    emotion: string;\n    percentage: number;\n  }[];\n  predominant_emotion: string;\n  confidence: number;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the example above, the analyzeTone function is used to send a text for analysis, and the result is displayed once the promise resolves. If an error occurs, it is logged in the console, and null is returned."}),"\n",(0,r.jsx)(n.h3,{id:"environment-variable",children:"Environment Variable"}),"\n",(0,r.jsx)(n.p,{children:"The API URL is retrieved from the environment variable VITE_ANALYZE_TONE_URL:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const apiUrl = import.meta.env.VITE_ANALYZE_TONE_URL;\n"})}),"\n",(0,r.jsx)(n.p,{children:"This allows you to configure different API endpoints for different environments (e.g., development, production) without hardcoding the URL into the code."}),"\n",(0,r.jsx)(n.h3,{id:"error-handling-1",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"If the fetch request fails or an error occurs during the request, the error is logged in the console:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"console.error('Failed to analyze tone:', error);\n"})}),"\n",(0,r.jsx)(n.p,{children:"The hook will return null when an error occurs."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);